
Работа со строками - <string.h>

 Здесь мы будем иметь дело с двумя группами функций. Функции с именами, начинающимися с str, работают с С-строками, в которых нулевой байт означает конец строки. Функции же, начинающиеся с mem, работают с массивами символов, следовательно, позволяют работать и с нулевыми байтами. 

Обратите внимание - функции вроде копирования и слияния строк (модифицирующие один из аргументов) изменяют первый аргумент, а не второй. 
 char *strcpy(char *s1, char *s2) 
 копирует строку s2 в s1. Возвращает s1.

 char *strncpy(char *s1, char *s2, size_t n)
 копирует строку s2 в s1, но копируется не более n символов. Возвращает s1.

 char *strcat(char *s1, char *s2)
 объединяет строки s1 и s2 (дописывает s2 в s1). Возвращает s1.

 char *strncat(char *s1, char *s2, size_t n)
 объединяет строки s1 и s2, но дописывает не более n символов. Возвращает s1.

 int strcmp(char *s1, char *s2)
 сравнивает строки (содержимое, не указатели), расставляя их в лексикографическом порядке. Возвращает 0 для совпадающих строк, отрицательное значение при s1<s2 и положительное при s1>s2.

 int strncmp(char *s1, char *s2, size_t n)
 тоже сравнивает строки, но берет из них для сравнения не более n первых символов. 

 char *strchr(char *s, int c)
 возвращает указатель на первый встреченный в строке символ c. Если такого символа в строке не оказалось, возвращает NULL.

 char *strrchr(char *s, int c)
 похожа на strchr(), но возвращает указатель на последний символ c в строке.

 char *strstr(char *s1, char *s2)
 возвращает указатель на первую встреченную в строке s1 подстроку s2. Если подстроки не нашлось, возвращает NULL.

 size_t strlen(char *str)
 возвращает длину строки.

 char *strerror(size_t n)
 возвращает строку сообщения, соответсвующего ошибке с номером n.

 void *memcpy(void *dst, void *src, size_t len)
 копирует len байтов (включая нулевые) из src в dst. Возвращает dst. 

 void *memove(void *dst, void *src, size_t len)
 делает то же, что и memcpy. Это - единственная функция, которая по стандарту обязана правильно копировать перекрывающиеся объекты.

 int memcmp(void *s1, void *s2, size_t len)
 аналог strcmp, но с учетом нулевых байтов.

 void *memchr(void *s, int c, size_t len)
 аналог strchr, но с учетом нулевых байтов.

 void *memset(void *s, int c, size_t len)
 заполняет первые len байтов массива s символом c.